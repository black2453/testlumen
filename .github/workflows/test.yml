# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 32574:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
          mysql --host 127.0.0.1 --port 32574 -uroot -ppassword -e "SHOW DATABASES"
#      steps:
#        - name: Verify MySQL connection from host
#          run: |
#            sudo apt-get install -y mysql-client
#            mysql --host 127.0.0.1 --port 32574 -uroot -ppassword -e "SHOW DATABASES"
    container: ubuntu
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
#    - name: Run a one-line script
#      run: echo Hello, world!

    # Runs a set of commands using the runners shell
#    - name: Run a multi-line script
#      run: |
#        echo Add other actions to build,
#        echo test, and deploy your project.
    - name: copy .env file in ci
      run: ls -al &&\
      php -r "file_exists('.env') || copy('.env.ci', '.env');"
    - name: install vendor
      run: composer install
#    - name: Generate key
#      run: php artisan key:generate
#    - name: Set up MySQL
#      uses: mirromutth/mysql-action@v1.1
#      with:
#        collation server: 'utf8_general_ci'
#        character set server: 'utf8'
#        mysql database: 'nuxt_shop'
#        mysql user: 'root'
#        mysql password: 'root'
#    - name: import database
#      run: mysql -u root -p nuxt_shop < nuxt_shop.sql
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/phpunit
